{"ast":null,"code":"import _slicedToArray from\"/home/jordi/Documents/ETHZ/Chair_of_systems_design/Ripple/React v4/static/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from\"react\";import useToggle from\"hooks/useToggle\";import{TriangleIcon}from\"components/Icons\";var List=function List(_ref){var label=_ref.label,content=_ref.content,open=_ref.open;var notEmpty=content&&content.length>0;var _useToggle=useToggle(open),_useToggle2=_slicedToArray(_useToggle,2),isOpen=_useToggle2[0],toggle=_useToggle2[1];var Label=notEmpty?isOpen?\"b\":\"span\":\"i\";return React.createElement(\"li\",null,React.createElement(\"div\",{onClick:toggle},notEmpty?React.createElement(TriangleIcon,{transform:\"rotate(\".concat(isOpen?\"90\":\"0\",\")\")}):React.createElement(\"u\",null,\"A\"),React.createElement(Label,null,label)),notEmpty?React.createElement(\"ul\",{style:{display:isOpen?\"block\":\"none\"}},content.map(function(item){return React.createElement(List,Object.assign({key:item.id},item));})):null);};export default List;","map":{"version":3,"sources":["/home/jordi/Documents/ETHZ/Chair_of_systems_design/Ripple/React v4/static/src/components/TreeView/List.js"],"names":["React","useToggle","TriangleIcon","List","label","content","open","notEmpty","length","isOpen","toggle","Label","display","map","item","id"],"mappings":"4JAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,SAAP,KAAsB,iBAAtB,CACA,OAASC,YAAT,KAA6B,kBAA7B,CAEA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,MAA8B,IAA3BC,CAAAA,KAA2B,MAA3BA,KAA2B,CAApBC,OAAoB,MAApBA,OAAoB,CAAXC,IAAW,MAAXA,IAAW,CACzC,GAAMC,CAAAA,QAAQ,CAAGF,OAAO,EAAIA,OAAO,CAACG,MAAR,CAAiB,CAA7C,CADyC,eAEhBP,SAAS,CAACK,IAAD,CAFO,0CAElCG,MAFkC,gBAE1BC,MAF0B,gBAGzC,GAAMC,CAAAA,KAAK,CAAGJ,QAAQ,CAAIE,MAAM,CAAG,GAAH,CAAS,MAAnB,CAA6B,GAAnD,CAEA,MACE,+BACE,2BAAK,OAAO,CAAEC,MAAd,EACGH,QAAQ,CAAG,oBAAC,YAAD,EAAc,SAAS,kBAAYE,MAAM,CAAG,IAAH,CAAU,GAA5B,KAAvB,EAAH,CAAmE,iCAD9E,CAEE,oBAAC,KAAD,MAAQL,KAAR,CAFF,CADF,CAMGG,QAAQ,CACP,0BAAI,KAAK,CAAE,CAAEK,OAAO,CAAEH,MAAM,CAAG,OAAH,CAAa,MAA9B,CAAX,EACGJ,OAAO,CAACQ,GAAR,CAAY,SAAAC,IAAI,QACf,qBAAC,IAAD,gBAAM,GAAG,CAAEA,IAAI,CAACC,EAAhB,EAAwBD,IAAxB,EADe,EAAhB,CADH,CADO,CAML,IAZN,CADF,CAgBD,CArBD,CAuBA,cAAeX,CAAAA,IAAf","sourcesContent":["import React from \"react\";\r\nimport useToggle from \"hooks/useToggle\";\r\nimport { TriangleIcon } from \"components/Icons\";\r\n\r\nconst List = ({ label, content, open }) => {\r\n  const notEmpty = content && content.length > 0;\r\n  const [isOpen, toggle] = useToggle(open);\r\n  const Label = notEmpty ? (isOpen ? \"b\" : \"span\") : \"i\";\r\n\r\n  return (\r\n    <li>\r\n      <div onClick={toggle}>\r\n        {notEmpty ? <TriangleIcon transform={`rotate(${isOpen ? \"90\" : \"0\"})`} /> : <u>A</u>}\r\n        <Label>{label}</Label>\r\n      </div>\r\n\r\n      {notEmpty ? (\r\n        <ul style={{ display: isOpen ? \"block\" : \"none\" }}>\r\n          {content.map(item => (\r\n            <List key={item.id} {...item} />\r\n          ))}\r\n        </ul>\r\n      ) : null}\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default List;\r\n"]},"metadata":{},"sourceType":"module"}